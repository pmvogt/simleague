// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Division {
  AFC_EAST
  AFC_WEST
  AFC_NORTH
  AFC_SOUTH
  NFC_EAST
  NFC_WEST
  NFC_NORTH
  NFC_SOUTH
}

enum NFLTeam {
  ARIZONA_CARDINALS
  ATLANTA_FALCONS
  BALTIMORE_RAVENS
  BUFFALO_BILLS
  CAROLINA_PANTHERS
  CHICAGO_BEARS
  CINCINNATI_BENGALS
  CLEVELAND_BROWNS
  DALLAS_COWBOYS
  DENVER_BRONCOS
  DETROIT_LIONS
  GREEN_BAY_PACKERS
  HOUSTON_TEXANS
  INDIANAPOLIS_COLTS
  JACKSONVILLE_JAGUARS
  KANSAS_CITY_CHIEFS
  LAS_VEGAS_RAIDERS
  LOS_ANGELES_CHARGERS
  LOS_ANGELES_RAMS
  MIAMI_DOLPHINS
  MINNESOTA_VIKINGS
  NEW_ENGLAND_PATRIOTS
  NEW_ORLEANS_SAINTS
  NEW_YORK_GIANTS
  NEW_YORK_JETS
  PHILADELPHIA_EAGLES
  PITTSBURGH_STEELERS
  SAN_FRANCISCO_49ERS
  SEATTLE_SEAHAWKS
  TAMPA_BAY_BUCCANEERS
  TENNESSEE_TITANS
  WASHINGTON_FOOTBALL_TEAM
}

enum PositionCategory {
  OFFENSE
  DEFENSE
  SPECIAL_TEAMS
}

model Playbook {
  id               Int     @id @default(autoincrement())
  team             NFLTeam @unique
  scheme           String?
  teamsAsOffensive Team[]  @relation("OffensivePlaybook")
  teamsAsDefensive Team[]  @relation("DefensivePlaybook")
}

model Team {
  id                  Int      @id @default(autoincrement())
  name                NFLTeam
  prettyName          String
  division            Division
  logoUrl             String?
  bgColor             String?
  gmId                Int      @unique
  gm                  Manager  @relation(fields: [gmId], references: [id])
  offensivePlaybookId Int
  defensivePlaybookId Int
  offensivePlaybook   Playbook @relation("OffensivePlaybook", fields: [offensivePlaybookId], references: [id])
  offensiveScheme     String?
  defensivePlaybook   Playbook @relation("DefensivePlaybook", fields: [defensivePlaybookId], references: [id])
  defensiveScheme     String?
  players             Player[]
  homeGames   Game[]   @relation("HomeGames")
  awayGames   Game[]   @relation("AwayGames")
}

model Manager {
  id          Int    @id @default(autoincrement())
  discordName String
  prettyName  String
  team        Team?  @relation
  teamId      Int?
}

model Position {
  id           Int              @id @default(autoincrement())
  name         String
  abbreviation String
  category     PositionCategory @default(OFFENSE)
  players      PlayerPosition[]
}

model PlayerPosition {
  playerId   Int
  player     Player   @relation(fields: [playerId], references: [id])
  positionId Int
  position   Position @relation(fields: [positionId], references: [id])

  @@id([playerId, positionId])
}

model Player {
  id        Int              @id @default(autoincrement())
  name      String
  teamId    Int?
  team      Team?            @relation(fields: [teamId], references: [id])
  positions PlayerPosition[]
}

model Game {
  id          Int      @id @default(autoincrement())
  date        DateTime
  homeTeamId  Int
  awayTeamId  Int
  homeTeam    Team     @relation(name: "HomeGames", fields: [homeTeamId], references: [id])
  awayTeam    Team     @relation(name: "AwayGames", fields: [awayTeamId], references: [id])
  homeScore   Int
  awayScore   Int
  week        Int?
  gameStats    GameStat[]
}

model GameStat {
  id        Int    @id @default(autoincrement())
  gameId    Int
  game      Game   @relation(fields: [gameId], references: [id])
  touchdowns    Int
  passYards     Int
  rushYards     Int
}